class DoublyLinkedList {
    constructor() {
        this.size = 0;
        this.head = null;
        this.tail = null;
    }
		
		// Добавляет элемент в список.
		// Если указан индекс - добавляет по индексу, 
		// в противном случае добавляет в конец.
		// Если индекс за пределами — кидает ошибку.
    add(value, index) {
        const node = createNode(value);
        ...
    }
		
		// Удаляет элемент из списка по значению.
		// Удаляет только первый найденный элемент.
		// Если элемент не найден, ничего делать не нужно.
    removeByValue(value) {
        ...
    }
		
		// Удаляет элемент из списка по индексу.
		// Если индекс за пределами — кидает ошибку.
    removeByIndex(index) {
        ...
    }
		
		// Ищет элемент в списке по индексу.
		// Если индекс за пределами — кидает ошибку.
    searchByIndex(index) {
        ...
    }

		// Ищет элемент в списке по значению.
		// Возвращает первый найденный элемент.
		// Опционально можно указать индекс начала поиска.
		// Если индекс за пределами — кидает ошибку.
		// Если элемент не найден, нужно вернуть null.
    searchByValue(value, startIndex = 0) {
        ...
    }
}

// Создаёт новую ноду, где
// value — её значение,
// next — ссылка на следующую ноду,
// prev — ссылка на предыдущую ноду
function createNode(value) {
	return {
		value,
		next: null,
		prev: null,
	};
}